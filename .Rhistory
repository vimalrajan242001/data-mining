bar2
bar=ggplot(movies,aes(x=year,fill=year))
bar2=bar+geom_bar(fill="red",bandwidth=5)+xlab("year")+ggtitle("bar plot for movies year")
bar2
data.frame(movies)
data.frame(movies)
bar=ggplot(movies,aes(x=year,y=rating,fill=year))
bar2=bar+geom_bar(fill="red",bandwidth=5)+xlab("year")+ggtitle("bar plot for movies year")
bar2
bar=ggplot(movies,aes(x=year,y=rating,fill=year))
bar2=bar+geom_bar(fill="red",bandwidth=5)+xlab("year")+ggtitle("bar plot for movies year")
bar2=bar+geom_bar(fill="red",binwidth=5)+xlab("year")+ggtitle("bar plot for movies year")
bar2=bar+geom_bar()+xlab("year")+ggtitle("bar plot for movies year")
bar2
data.frame(movies)
bar=ggplot(movies,aes(x=year,y=rating,fill=votes))
bar2=bar+geom_bar(position="dodge", stat="identity")+xlab("year")+ggtitle("bar plot for movies year")
bar2
bar=ggplot(movies,aes(x=votes,y=rating,fill=year))
bar2=bar+geom_bar(position="dodge", stat="identity")+xlab("year")+ggtitle("bar plot for movies year")
bar2
bar=ggplot(movies,aes(x=votes,y=rating,fill=year))
bar2=bar+geom_bar(position="dodge", stat="identity")+xlab("year")+ylab("ratings")+ggtitle("grouped bar plot for movies year")
bar2
line=ggplot(movies,aes(x=movies,y=rating))
line2=line+geom_line(color="red")+xlab("movies")+ylab("ratings")+ggtitle("line graph for movies year")
line2
line=ggplot(movies,aes(x=movies,y=votes))
line2=line+geom_line(color="red")+ggtitle("line graph for movies year")
line2
line=ggplot(movies,aes(x=movies,y=votes))
line2=line+geom_line(color="red")+ggtitle("line graph for movies year")
line2
line=ggplot(movies,aes(x=budget,y=year))
line2=line+geom_line(color="red")+ggtitle("line graph for movies year")
line2
nrows(movies)
nrow(movies)
data=(movies[1:100])
data
datas
datas=(movies[1:100])
datas
datas=(movies[1:100])
datas=(movies[1:100])
datas
datas=(head(movies))
datas
line=ggplot(datas,aes(x=budget,y=year))
line2=line+geom_line(color="red")+ggtitle("line graph for movies year")
line2
datas=(head(movies,100))
datas
line=ggplot(datas,aes(x=budget,y=year))
line2=line+geom_line(color="red")+ggtitle("line graph for movies year")
line2
line2=line+geom_point(color="red")+ggtitle("line graph for movies year")
datas
line=ggplot(datas,aes(x=budget,y=year))
line2=line+geom_point(color="red")+ggtitle("line graph for movies year")
line2
nrow(movies)
datas=(head(movies,20))
datas
line=ggplot(datas,aes(x=budget,y=year))
line2=line+geom_point(color="red")+ggtitle("line graph for movies year")
line2
nrow(movies)
datas=(head(movies,80))
datas
line=ggplot(datas,aes(x=budget,y=year))
line2
nrow(movies)
line2=line+geom_point(color="red")+ggtitle("line graph for movies year")
line=ggplot(datas,aes(x=r1,y=year))
line2=line+geom_point(color="red")+ggtitle("line graph for movies year")
line2
nrow(movies)
line=ggplot(datas,aes(x=length,y=year))
line2=line+geom_point(color="red")+ggtitle("line graph for movies year")
line2
nrow(movies)
colnam=movies$budget
colnam
colnam=movies$rating
colnam
datas=(head(movies$rating))
datas
datas=(head(movies$rating,20))
datas
datas=(head(movies$rating,5))
pie(slices, main="Pie Chart of movie rating")
datas
pie(slices, main="Pie Chart of movie rating")
pies=pie(slices, main="Pie Chart of movie rating")
pies
pies=pie(datas, main="Pie Chart of movie rating")
install.packages("plotrix")
bar=ggplot(movies,aes(x=votes,y=rating,fill=year))
bar2=bar+geom_histogram(position="dodge", stat="identity")+xlab("year")+ylab("ratings")+ggtitle("grouped bar plot for movies year")
datas=(head(movies,10))
datas
bar=ggplot(movies,aes(x=votes,y=rating,fill=year))
bar2=bar+geom_histogram(binwidth = 2)+xlab("year")+ylab("ratings")+ggtitle("grouped bar plot for movies year")
bar2
bar=ggplot(movies,aes(x=votes,y=rating))
bar2=bar+geom_histogram(binwidth = 2)+xlab("year")+ylab("ratings")+ggtitle("grouped bar plot for movies year")
bar2
bar=ggplot(movies,aes(x=votes))
bar2=bar+geom_histogram(binwidth = 2)+xlab("year")+ylab("ratings")+ggtitle("grouped bar plot for movies year")
bar2
bar=ggplot(movies,aes(x=votes,y=year))
bar2=bar+geom_histogram(binwidth = 2)+xlab("year")+ylab("ratings")+ggtitle("grouped bar plot for movies year")
bar2
bar=ggplot(movies,aes(x=rating))
bar2=bar+geom_histogram(binwidth = 2)+xlab("year")+ylab("ratings")+ggtitle("grouped bar plot for movies year")
bar2
bar2=bar+geom_histogram(binwidth = 0.2)+xlab("year")+ylab("ratings")+ggtitle("grouped bar plot for movies year")
bar2
install.packages("wordcloud")
library(wordcloud)
install.packages("RColorBrewer")
library(RColorBrewer)
install.packages("wordcloud2)
library(wordcloud2)
install.packages("RColorBrewer")
install.packages("wordcloud2")
library(wordcloud2)
words="Well, space is there, and we're going to climb it, and the
moon and the planets are there, and new hopes for knowledge
and peace are there. And, therefore, as we set sail we ask
God's blessing on the most hazardous and dangerous and greatest
adventure on which man has ever embarked."
wordcloud(words,freq,scale=c(4,.5),min.freq=3,max.words=Inf,
random.order=TRUE, random.color=FALSE, rot.per=.1,
colors="black",ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE, ...)
wordcloud(words,freq,scale=c(4,.5),min.freq=3,max.words=Inf,
random.order=TRUE, random.color=FALSE, rot.per=.1,
colors="black",ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
install.packages (“tm”)
library(tm)
library(wordcloud)
library(RColorBrewer)
install.package(“tm”)
wd()
getwd()
library(wordcloud)
wc=read.csv("word.csv",header= TRUE)
head(wc)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=2,max.words = 50,random.order = FALSE)
getwd()
wc=read.csv("word.csv",header= TRUE)
wc=read.csv("employee.csv",header= TRUE)
head(wc)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=2,max.words = 50,random.order = FALSE)
wc=read.csv("word.csv",header= TRUE)
wc=read.csv("word.csv",header= FALSE)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=2,max.words = 50,random.order = FALSE)
wc=read.csv("words.csv",header= FALSE)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=2,max.words = 50,random.order = FALSE)
getwd()
wc=read.csv("words.csv",header= FALSE)
wc=read.csv("words.csv",header= FALSE,file = file, header = header, sep = sep, quote = quote)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=2,max.words = 50,random.order = FALSE)
getwd()
wc=read.csv("employee.csv",header= TRUE)
head(wc)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=2,max.words = 50,random.order = FALSE)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=2,max.words = 500,random.order = FALSE)
wc=read.csv("employee.csv",header= TRUE)
head(wc)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=2,max.words = 500,random.order = FALSE)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=9,max.words = 500,random.order = FALSE)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=900,max.words = 500,random.order = FALSE)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=900,max.words = 500,random.order = FALSE)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=900,max.words = 50,random.order = FALSE)
wc=read.csv("employee.csv",header= TRUE)
head(wc)
wordcloud(words=wc$Name,freq=wc$Salary,min.freq=900,max.words = 50,random.order = FALSE)
install.packages("e1071")
library(e1071)
data=read.csv("C:\Users\vimal\Downloads\income.csv")
data=read.csv("C:\Users\vimal\Downloads\mark.csv")
data=read.csv("mark.csv")
skewness(data$mark)
plot(density(data$mark))
print(mean(data$mark))
data.frame(data)
kurtosis(data$mark)
data=read.csv("income.csv")
kurtosis(data$mark)
kurtosis(data$amount)
r<-c(3,3,3,12,15, 16,17,19,23,24,32)
r2<-c(20,  13,13,20,29,32,  23,20,25,15, 30)
t.test(r,r2)
r<-c(0,
2,
3,
5,
8,
10,
12
)
r2<-c(1,
2,
3,
9,
10,
10,
11
)
r3<-c(1,
4,
5,
5,
8,
9,
10
)
combine=data.frame(cbind(r,r2,r3))
stack_group=stack(combine)
stack_group
a<-aov(values~ind,data=stack_group)
summary(a)
r<-c(0,
2,
3,
5,
8,
10,
12
)
r2<-c(1,
2,
3,
9,
10,
10,
11
)
r3<-c(1,
4,
5,
5,
8,
9,
10
)
combine=data.frame(cbind(r,r2,r3))
stack_group=stack(combine)
stack_group
a<-aov(values~ind,data=stack_group)
summary(a)
library(ggplot2)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
head(ToothGrowth)
p<-ggplot(ToothGrowth, aes(x=dose, y=len, fill=dose)) +
geom_violin(trim=FALSE)
p
#type1:Density plot
qplot(x = mpg$hwy, geom = "density")
library(e1071)
data=movies
skewness(data$length)
plot(density(data$length))
print(mean(data$length))
library(e1071)
library(ggplot2movies)
data=movies
print(skewness(data$length))
plot(density(data$length))
print(kurtosis(data$length))
cat('\n')
print(skewness(data$length))
plot(density(data$length))
print(kurtosis(data$length))
cat('\n')
print(kurtosis(data$length))
HoursStudied<-c(8,11,3,6,14,9,2,0,7,13,10,4,9)
ExamMark<-c(82,94,70,75,98,80,68,53,76,87,89,83,72)
model=lm(HoursStudied~ExamMark)
summary(model)
data=data.frame(ExamMark=90)
result=predict(model,data)
print(result)
install.packages("caTools")
librart(caTools)
library(caTools)
set.seed(13)
sales=read.csv(mtcars)
s=sample.split
library(caTools)
set.seed(13)
sales=read.csv(mtcars)
sales=read.csv(Employee.csv)
s=sample.split(sales,SplitRatio = 0.6)
sales=read.csv(Employee.csv)
sales=read.csv(C:\Users\vimal\Documents\Employee.csv)
sales=read.csv("C:\Users\vimal\Documents\Employee.csv")
library(caTools)
library(ggplot2)
dataset <- read.csv('../input/salary/Salary.csv')
dim(dataset)
set.seed(123)
split <- sample.split(dataset$Salary, SplitRatio = 0.8)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
cat(' Dimension of traing data:', dim(training_set), "\n",'Dimension of testing data:', dim(test_set))
regressor <- lm(formula <- Salary ~ YearsExperience, data <- training_set)
summary(regressor)
y_pred <- predict(regressor, test_set)
ggplot() +
geom_point(aes(x <- training_set$YearsExperience, y <- training_set$Salary), colour = 'red') +
geom_line(aes(x <- training_set$YearsExperience, y <- predict(regressor, training_set)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x <- test_set$YearsExperience, y <- test_set$Salary), colour = 'red') +
geom_line(aes(x <- training_set$YearsExperience, y <- predict(regressor, training_set)), colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
dataset <- read.csv('C:\Users\vimal\Documents\Employee.csv')
print(getwd())
dataset <- read.csv('C:\Users\vimal\Documents\Employee.csv')
dataset <- read.csv('Employee.csv')
dim(dataset)
set.seed(123)
split <- sample.split(dataset$Salary, SplitRatio = 0.8)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
cat(' Dimension of traing data:', dim(training_set), "\n",'Dimension of testing data:', dim(test_set))
regressor <- lm(formula <- Salary ~ YearsExperience, data <- training_set)
summary(regressor)
regressor <- lm(formula <- Salary ~., data <- training_set)
summary(regressor)
y_pred <- predict(regressor, test_set)
ggplot() +
geom_point(aes(x <- training_set$YearsExperience, y <- training_set$Salary), colour = 'red') +
geom_line(aes(x <- training_set$YearsExperience, y <- predict(regressor, training_set)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x <- test_set$YearsExperience, y <- test_set$Salary), colour = 'red') +
geom_line(aes(x <- training_set$YearsExperience, y <- predict(regressor, training_set)), colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
y_pred <- predict(regressor, test_set)
library(caTools)
set.seed(42)
data = head(mtcars,20)
s = sample.split(data,SplitRatio = 0.7)
train = subset(data,s==TRUE)
test = subset(data,s == FALSE)
m = lm(mpg~.,train)
ypred = predict(m,test)
data = data.frame(ypred,test$mpg)
library(ggplot2)
ggplot(test, aes(x = hp, y = mpg)) +
geom_point() +
geom_point(aes(y = data$ypred),colour="red", shape = 1)
s
train
test
m
ggplot(test, aes(x = hp, y = mpg)) +
geom_line() +
geom_line(aes(y = data$ypred),colour="red", shape = 1)
set.seed(10)
library(caTools)
s=sample.split(mtcars,SplitRatio = 0.8)
train=subset(mtcars,split=TRUE)
test=subset(mtcars,split=FALSE)
model=lm(mtcars$mpg~.,data=train)
prt=predict(model,test)
print(prt)
plot(prt,type='l',col="red")
lines(mtcars$mpg,type="l",col="blue")
setwd("E:/studies/3rd year/q1/data mining")
getwd()
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
#Load the data
text <- readLines(file.choose())
text
#Load the data as a Corpus
?Corpus()
docs <- Corpus(VectorSource(text))
docs
#Inspect the content of the document
?inspect()
inspect(docs)
#Text Transformation
#tm_map()
?tm_map()
tospace <- content_transformer(function(x, pattern)gsub(pattern, " ",x))
tospace()
tospace
docs <-tm_map(docs, tospace, "/")
docs <-tm_map(docs, tospace, "@")
docs <-tm_map(docs, tospace, "\\|")
#Convert the text
docs <-tm_map(docs,content_transformer(tolower))
#Remove number
docs <-tm_map(docs,removeNumbers)
#REMOVE COMMON STOP WORDS
docs <-tm_map(docs,removeWords,stopwords("english"))
#Specify stopwords
docs <-tm_map(docs,removeWords,c("all", "not"))
#Remove punctuation
docs <-tm_map(docs,removePunctuation)
#Eliminate extra white spaces
docs <-tm_map(docs,stripWhitespace)
dtm <- TermDocumentMatrix(docs)
dtm
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
#Load the data as a Corpus
?Corpus()
inspect(docs)
wordcloud(d$word,d$freq,min.freq = 1,max.words = 300,random.order = FALSE,rot.per = 0.35,colors = "black")
dataset=runif(100,0,10)
barplot(table)
dataset=runif(100,0,10)
dataset
bins=4
min=min(dataset)
max=max(dataset)
width=(max-min)/bins
width=round(width)
width
#cut te range of x into interval
cut(dataset,breaks=seq(min,max,width))
table(cut(dataset,breaks=seq(min,max,width)))
barplot(table)
#cut te range of x into interval
cut(dataset,breaks=seq(min,max,width))
table(cut(dataset,breaks=seq(min,max,width)))
barplot(table(cut(dataset,breaks=seq(min,max,width))))
#cut te range of x into interval
cut(dataset,breaks=seq(min,max,width))
?cut
?table
students
students <- read.csv("data-conversion.csv")
students
data
data <- read.csv("data-conversion.csv")
data
students <- read.csv("data-conversion.csv")
students
#Create a vector of breakpoints
?Inf
?table
#Cut the vector
students$Income.b <- cut(students$Income, breaks=b, labels=names)
students$Income.b
b <- c(-Inf, 10000, 31000, Inf)
names <-c("Low", "Medium", "High")
#Cut the vector
students$Income.b <- cut(students$Income, breaks=b, labels=names)
students$Income.b
students
table(cut(students$Income, breaks=b, labels=names))
labels=c("level1","level2","level3","level4")))
barplot(table(cut(students$Income, breaks=4, labels=c("level1","level2","level3","level4"))))
students$Income.b
students
table(cut(students$Income, breaks=b, labels=names))
labels=c("level1","level2","level3","level4")
barplot(table(cut(students$Income, breaks=4, labels=c("level1","level2","level3","level4"))))
students
students$Income.c <- table(cut(students$Income, breaks=4, labels=c("level1","level2","level3","level4")))
students
students$Income.c <- cut(students$Income, breaks=4, labels=c("level1","level2","level3","level4"))
students
library(delim)
library(tidyverse)
library(readr)
data <- read.delim("zipIncome.csv",delim=",")
data <- read_delim("zipIncome.csv",delim=",")
data
str(data)
summary(data)
data_extract <- data %>% select(MeanEducation,MeanHouseholdIncome)
library(dplyr)
data_extract <- data %>% select(MeanEducation,MeanHouseholdIncome)
data_extract
summary(data_extract)
ggplot(data = data_extract, mapping = aes(x=MeanEducation)) +
geom_histogram(aes(y=..density..),fill="bisque",color="white",alpha=0.7) +
geom_density() +
geom_rug() +
labs(x='mean education per house') +
theme_minimal()
library(ggplot2)
ggplot(data = data_extract, mapping = aes(x=MeanEducation)) +
geom_histogram(aes(y=..density..),fill="bisque",color="white",alpha=0.7) +
geom_density() +
geom_rug() +
labs(x='mean education per house') +
theme_minimal()
